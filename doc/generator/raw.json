{"majorversion": 2, "classmap": {"BandIt": {"name": "BandIt", "constructors": [{"params": [{"type": "", "name": "diveditor", "description": " Name of the div where editor will be put"}, {"type": "", "name": "width", "description": " Width of the div"}, {"type": "", "name": "height", "description": " Height of the div"}], "description": "BandIt is a library above RaphaelJS to create workflows in HTML/JS."}], "namespace": "", "module": "BandIt", "methods": {"moveLeft": {"methode": "moveLeft", "params": [{"type": "int", "name": "step", "description": "  Step of the move"}], "description": "Translate on the left the workflow", "guessedname": "moveLeft", "guessedtype": "function"}, "getMode": {"return": {"type": "int", "description": "current   mode"}, "description": "Gets current edition mode", "guessedname": "getMode", "guessedtype": "function"}, "deletenode": {"params": [{"type": "int", "name": "nodeid", "description": "  Node id to delete"}], "description": "Delete a node", "guessedname": "deletenode", "guessedtype": "function"}, "registerDelete": {"params": [{"type": "", "name": "callback", "description": " Function to use when a node is deleted, function(nodeid)"}], "description": "Register a callback when a node is deleted", "guessedname": "registerDelete", "guessedtype": "function"}, "moveRight": {"methode": "moveRight", "params": [{"type": "int", "name": "step", "description": "  Step of the move"}], "description": "Translate on the right the workflow", "guessedname": "moveRight", "guessedtype": "function"}, "moveDown": {"methode": "moveDown", "params": [{"type": "int", "name": "step", "description": "  Step of the move"}], "description": "Translate to the down the workflow", "guessedname": "moveDown", "guessedtype": "function"}, "redrawpaths": {"params": [{"type": "int", "name": "nodeid", "description": "   Id of the Node"}], "description": "Redraw all paths linked to a node", "guessedname": "redrawpaths", "guessedtype": "function"}, "getPaper": {"return": {"type": "Paper} paper used for the draw\n/*\nBandIt.prototype.getPaper = function() {\nreturn this.paper;\n", "description": "/**\nAdds a new node on paper"}, "params": [{"type": "string", "name": "name", "description": "   Unique name of the node (optional). If undefined, a default counter is used"}, {"type": "Object", "name": "atts", "description": "   Element properties (optional). For properties, look at Raphael Element documentation."}], "description": "get Rapahel Paper element", "guessedname": "add", "guessedtype": "function"}, "deletepath": {"methode": "deletepath", "params": [{"type": "Path", "name": "path", "description": "  Path element to delete"}], "description": "Delete a path", "guessedname": "deletepath", "guessedtype": "function"}, "zoomOut": {"methode": "zoomOut", "description": "Zoom out the workflow", "guessedname": "zoomOut", "guessedtype": "function"}, "moveUp": {"methode": "moveUp", "params": [{"type": "int", "name": "step", "description": "  Step of the move"}], "description": "Translate to the up the workflow", "guessedname": "moveUp", "guessedtype": "function"}, "registerSelect": {"params": [{"type": "", "name": "callback", "description": " Function to use when a node is selected, function(nodeid, nodeproperties)"}], "description": "Register a callback when a node is selected", "guessedname": "registerSelect", "guessedtype": "function"}, "setMode": {"params": [{"type": "int", "name": "newmode", "description": "   new edition mode"}], "description": "Sets current edition mode", "guessedname": "setMode", "guessedtype": "function"}, "setDefaultProperties": {"params": [{"type": "Object", "name": "props", "description": "   Key/value pairs of properties"}], "description": "Sets default list of properties", "guessedname": "setDefaultProperties", "guessedtype": "function"}, "setProperties": {"params": [{"type": "int", "name": "nodeid", "description": "  ID of the node"}, {"type": "Object", "name": "props", "description": "  Properties of the node"}], "description": "Update the properties of a node", "guessedname": "setProperties", "guessedtype": "function"}, "registerAdd": {"params": [{"type": "", "name": "callback", "description": " Function to use when a node is added, function(nodeid)"}], "description": "Register a callback when a node is added", "guessedname": "registerAdd", "guessedtype": "function"}, "redrawpath": {"methode": "redrawpath", "params": [{"type": "Path", "name": "link", "description": "  Path element to delete"}, {"type": "int", "name": "node", "description": "  Id of the node the path is linked as origin"}], "description": "Redraw a path", "guessedname": "redrawpath", "guessedtype": "function"}, "zoomIn": {"methode": "zoomIn", "description": "Zoom in the workflow", "guessedname": "zoomIn", "guessedtype": "function"}}, "file": "bandit.js", "shortname": "BandIt", "properties": {"mode": {"description": "Operation mode:\n0 : drag and drop, selection\n1 : link\n2 : delete", "guessedname": "mode", "guessedtype": "property"}}, "description": "BandIt is a library above RaphaelJS to create workflows in HTML/JS."}, "BanditLogger": {"name": "BanditLogger", "constructors": [{"params": [{"type": "int", "name": "level", "description": "  Level of log: 0:DEBUG, 1:INFO, 2: ERROR"}], "description": "BanditLogger"}], "namespace": "", "module": "BandIt", "guessedname": "level", "methods": {"DEBUG": {"params": [{"type": "String", "name": "msg", "description": "  message to log"}], "description": "Log a debug level message", "guessedname": "DEBUG", "guessedtype": "function"}, "INFO": {"params": [{"type": "String", "name": "msg", "description": "  message to log"}], "description": "Log an info level message", "guessedname": "INFO", "guessedtype": "function"}, "ERROR": {"params": [{"type": "String", "name": "msg", "description": "  message to log"}], "description": "Log an error level message", "guessedname": "ERROR", "guessedtype": "function"}}, "file": "bandit.js", "guessedtype": "property", "shortname": "BanditLogger", "description": "BanditLogger"}, "pick": {"return": "{Object} default is undefined", "name": "pick", "namespace": "", "module": "BandIt", "param": "arg {Object} Value to test", "file": "bandit.js", "shortname": "pick", "description": "Eval an argument."}}, "version": "0.1.0", "modules": {"BandIt": {"description": "The BandIt module provides methods to draw a workflow<br/>\nAuthor: Olivier Sallou <olivier.sallou@irisa.fr></br>\nLicense: CeCILL-B", "submodules": [], "classlist": ["BandIt", "pick", "BanditLogger"], "filelist": ["bandit.js"], "subdata": {}, "requires": "RaphaelJS, JQuery", "name": "BandIt"}}, "filemap": {"bandit.js": {"classlist": ["BandIt", "pick", "BanditLogger"], "name": "bandit.js", "module": "BandIt"}}}